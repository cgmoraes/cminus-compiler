ALLOCARR vet(10) global

FUN int minloc
ARG int a
ARG int low
ARG int high
ALLOC i minloc
ALLOC x minloc
ALLOC k minloc
LOAD $t0 low
ASSIGN $t1 $t0
STORE k $t1
LOAD $t2 low
VEZES $t3 $t2 4
LOAD $t4 a($t3)
ASSIGN $t5 $t4
STORE x $t5
LOAD $t6 low
MAIS $t7 $t6 1
ASSIGN $t8 $t7
STORE i $t8
LAB L0
LOAD $t9 i
LOAD $t10 high
MENORQ $t11 $t9 $t10
WHILE $t11 L1
LOAD $t12 i
VEZES $t13 $t12 4
LOAD $t14 a($t13)
LOAD $t15 x
MENORQ $t16 $t14 $t15
IFF $t16 L2
LOAD $t17 i
VEZES $t18 $t17 4
LOAD $t19 a($t18)
ASSIGN $t20 $t19
STORE x $t20
LOAD $t21 i
ASSIGN $t22 $t21
STORE k $t22
GOTO L3
LAB L2
LAB L3
LOAD $t23 i
MAIS $t24 $t23 1
ASSIGN $t25 $t24
STORE i $t25
GOTO L0
LAB L1
LOAD $t26 i
MAIS $t27 $t26 3
VEZES $t28 $t27 4
LOAD $t29 a($t28)
RET $t29
END minloc

FUN void sort
ARG int a
ARG int low
ARG int high
ALLOC i sort
ALLOC k sort
LOAD $t30 low
ASSIGN $t31 $t30
STORE i $t31
LAB L4
LOAD $t0 high
MENOS $t1 $t0 1
LOAD $t2 i
MENORQ $t3 $t2 $t1
WHILE $t3 L5
ALLOC t sort
LOAD $t4 a
PARAM $t4
LOAD $t5 i
PARAM $t5
LOAD $t6 high
PARAM $t6
CALL $t7 minloc 3
ASSIGN $t8 $t7
STORE k $t8
LOAD $t9 k
VEZES $t10 $t9 4
LOAD $t11 a($t10)
ASSIGN $t12 $t11
STORE t $t12
LOAD $t13 i
VEZES $t14 $t13 4
LOAD $t15 a($t14)
ASSIGN $t16 $t15
STORE a $t16
LOAD $t17 t
ASSIGN $t18 $t17
STORE a $t18
LOAD $t19 i
MAIS $t20 $t19 1
ASSIGN $t21 $t20
STORE i $t21
GOTO L4
LAB L5
END sort

FUN void main
ALLOC i main
ASSIGN A $t22 0
STORE i $t22
LAB L6
LOAD $t23 i
MENORQ $t24 $t23 10
WHILE $t24 L7
INPUT $t25
ASSIGN $t26 $t25
STORE vet $t26
LOAD $t27 i
MAIS $t28 $t27 1
ASSIGN $t29 $t28
STORE i $t29
GOTO L6
LAB L7
LOAD $t30 vet
PARAM $t30
PARAM 0
PARAM 10
CALL $t31 sort 3
ASSIGN A $t0 0
STORE i $t0
LAB L8
LOAD $t1 i
MENORQ $t2 $t1 10
WHILE $t2 L9
LOAD $t3 i
VEZES $t4 $t3 4
LOAD $t5 vet($t4)
OUTPUT $t5
LOAD $t6 i
MAIS $t7 $t6 1
ASSIGN $t8 $t7
STORE i $t8
GOTO L8
LAB L9
END main
HALT