AARR vet(10) global
FUN int minloc
ARG int a
ARG int low
ARG int high
ALLOC i minloc
ALLOC x minloc
ALLOC k minloc
LOAD $t0 low
ASSIGN $t1 $t0
STORE $t1 k
LOAD $t2 low
ADDI $t3 $zero 4
VEZES $t4 $t2 $t3
LOAD $t5 a($t4)
ASSIGN $t6 $t5
STORE $t6 x
LOAD $t7 low
ADDI $t8 $zero 1
MAIS $t9 $t7 $t8
ASSIGN $t10 $t9
STORE $t10 i
LAB L0
LOAD $t11 i
LOAD $t12 high
MENORQ $t13 $t11 $t12
WHILE $t13 L1
LOAD $t14 i
ADDI $t15 $zero 4
VEZES $t16 $t14 $t15
LOAD $t17 a($t16)
LOAD $t18 x
MENORQ $t19 $t17 $t18
IFF $t19 L2
LOAD $t20 i
ADDI $t21 $zero 4
VEZES $t22 $t20 $t21
LOAD $t23 a($t22)
ASSIGN $t24 $t23
STORE $t24 x
LOAD $t25 i
ASSIGN $t26 $t25
STORE $t26 k
GOTO L3
LAB L2
LAB L3
LOAD $t27 i
ADDI $t28 $zero 1
MAIS $t29 $t27 $t28
ASSIGN $t30 $t29
STORE $t30 i
GOTO L0
LAB L1
LOAD $t31 k
RET $t31
END minloc
FUN void sort
ARG int a
ARG int low
ARG int high
ALLOC i sort
ALLOC k sort
LOAD $t32 low
ASSIGN $t33 $t32
STORE $t33 i
LAB L4
LOAD $t34 high
ADDI $t35 $zero 1
MENOS $t36 $t34 $t35
LOAD $t37 i
MENORQ $t38 $t37 $t36
WHILE $t38 L5
ALLOC t sort
LOAD $t39 a
PARAM $t39
LOAD $t40 i
PARAM $t40
LOAD $t41 high
PARAM $t41
CALL $t42 minloc 3
ASSIGN $t43 $t42
STORE $t43 k
LOAD $t44 k
ADDI $t45 $zero 4
VEZES $t46 $t44 $t45
LOAD $t47 a($t46)
ASSIGN $t48 $t47
STORE $t48 t
LOAD $t49 i
ADDI $t50 $zero 4
VEZES $t51 $t49 $t50
LOAD $t52 a($t51)
ASSIGN $t53 $t52
LOAD $t54 k
ADDI $t55 $zero 4
VEZES $t56 $t54 $t55
STORE $t53 a($t56)
LOAD $t57 t
ASSIGN $t58 $t57
LOAD $t59 i
ADDI $t60 $zero 4
VEZES $t61 $t59 $t60
STORE $t58 a($t61)
LOAD $t62 i
ADDI $t63 $zero 1
MAIS $t64 $t62 $t63
ASSIGN $t65 $t64
STORE $t65 i
GOTO L4
LAB L5
END sort
FUN void main
ALLOC i main
ADDI $t66 $zero 0
ASSIGN $t67 $t66
STORE $t67 i
LAB L6
LOAD $t68 i
ADDI $t69 $zero 10
MENORQ $t70 $t68 $t69
WHILE $t70 L7
INPUT $t71
ASSIGN $t72 $t71
LOAD $t73 i
ADDI $t74 $zero 4
VEZES $t75 $t73 $t74
STORE $t72 vet($t75)
LOAD $t76 i
ADDI $t77 $zero 1
MAIS $t78 $t76 $t77
ASSIGN $t79 $t78
STORE $t79 i
GOTO L6
LAB L7
LOAD $t80 vet
PARAM $t80
ADDI $t81 $zero 0
PARAM $t81
ADDI $t82 $zero 10
PARAM $t82
CALL $t83 sort 3
ADDI $t84 $zero 0
ASSIGN $t85 $t84
STORE $t85 i
LAB L8
LOAD $t86 i
ADDI $t87 $zero 10
MENORQ $t88 $t86 $t87
WHILE $t88 L9
LOAD $t89 i
ADDI $t90 $zero 4
VEZES $t91 $t89 $t90
LOAD $t92 vet($t91)
OUTPUT $t92
LOAD $t93 i
ADDI $t94 $zero 1
MAIS $t95 $t93 $t94
ASSIGN $t96 $t95
STORE $t96 i
GOTO L8
LAB L9
END main
HALT